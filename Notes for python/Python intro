Python - introduction 
• Python is a widely used high-level programming language for generalpurpose programming, created by Guido van Rossum and first released 
in 1991.
• Guido van Rossum was big fan of Monty Python's Flying Circus and 
hence had given the name of this programming language as Python.
• Python uses a syntax that allows programmers to express concepts in
fewer lines of code than might be used in languages such as C++ or Java

Features of Python
•Easy-to-learn − Python has few keywords, simple structure, and a clearly defined syntax. This allowsthe
student to pick up the language quickly.
•Easy-to-read − Python code is more clearly defined and visible to the eyes.
•Easy-to-maintain − Python's source code is fairly easy-to-maintain.
•Interactive Mode − Python has support for an interactive mode which allows interactive testing and debugging 
of snippets of code.
•Extendable − You can add low-level modules to the Python interpreter. These modules enable programmers to
add to or customize their tools to be more efficient.
•Databases − Python provides interfaces to all major commercial databases.
•Scalable − Python provides a better structure and support for large programs than shell scripting.

Variables
• Variable is used to store data and to retrieve the data. That means, we can change its value .
It is not fixed

In python variables are case sensitive and consists of numbers, letters and underscore.
• Reserved words should not be used as a variables names.
Example : else , return ,and print etc.

Operators
• Arithmetic Operators
• Comparison (Relational)Operators
• Assignment Operators
• Logical Operators
• Bitwise Operators
• Membership Operators
• Identity Operators

Operator Precedence
1.Parenthesis
2. Power
3.Multiplication 
4.Addition 
5.Left to Right
• During operation where one operand is an integer and the other operand 
is a floating point the result is a floating point
• The integer is converted to a floating point before theoperation.

Different Data Types
1.Numeric Data Type
Python numeric data type is used to hold 
numeric values like;
• int – holds signed integers of non-limited
length.
• float- holds floating precision numbers
and it’s accurate up to 15 decimal places.
• complex- holds complex numbers.
In Python we can simply assign values in a 
variable. But if we want to see what type of 
numerical value is it holding right now, we can 
use type()

2.String
String is a sequence of characters. Python supports 
Unicode characters. Generally strings are 
represented by either single or double quotes.
Python does not support a character type;
these are treated as strings of length one,
thus also considered a substring

3.List
List is a versatile data type in Python. Interesting 
thing about list in Python is it can simultaneously 
hold different type of data. Formally list is a ordered 
sequence of some data written using square 
brackets([]) and commas(,)

4.Tuple
Tuple is another data type which is a sequence of 
data similar to list. But it is immutable. Thatmeans 
data in a tuple is write protected. Data in a tuple is 
written using parenthesis and commas.

5.Dictionary
Python Dictionary is an unordered sequence of data of keyvalue pair form. It is similar to the hash table type. Dictionaries 
are written in the form key : value. This means, for each key, 
there should be a value. All the keys are unique. It is very useful 
to retrieve data in an optimized way among large amount of 
data.
We can initialize a dictionary closed by curly braces.Key 
and values are separated by a semicolon and thevalues 
are separated by the comma. Dictionaries are easy to 
use. The following code will help you understand Python 
Dictionary.

Indexing in Python
Python follows a zero-based index where the initial element of a sequence is assigned the index 
0, rather than the index 1 as is typical in everyday non-mathematical or non-programming 
circumstances.
These indexes are used to access element in a list, string, array etc.
There are 2 different ways to access elements using index:
1) To start from the front
a = [10, 20, 30, 40, 50]
first = a[0]
second = a[1]
print(“First two elements of the list are :”, first, second)
2) To start from end – This is useful when you have a large set of
data
a = [10, 20, 30, 40, 50]
last = a[-1]
second_last = a[-2]
print(“Last 2 elements of the list are :”, second_last, last)

